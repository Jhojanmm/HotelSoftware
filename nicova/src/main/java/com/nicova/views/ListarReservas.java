/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.nicova.views;

import com.nicova.controllers.GetClientes;
import com.nicova.controllers.GetHabitaciones;
import static com.nicova.controllers.GetHabitaciones.leerHabitaciones;
import com.nicova.controllers.GetReservas;
import com.nicova.objetos.Cliente;
import com.nicova.objetos.Habitacion;
import com.nicova.objetos.ReservaObjeto;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhoja
 */
public class ListarReservas extends javax.swing.JPanel {

    /**
     * Creates new form Habitaciones
     */
    String csvFile = "C:\\Nicova\\reservas.csv";
    DefaultTableModel TBCliente = new DefaultTableModel();
    List<ReservaObjeto> listaReserva = GetReservas.leerReservas(csvFile);

    public ListarReservas() {
        initComponents();
        InitStyles();
        setModelo();
        jtableCliente.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = jtableCliente.getSelectedRow();
                int selectedColumn = jtableCliente.getSelectedColumn();

                // Capturar el dato seleccionado
                Object selectHabitacion = jtableCliente.getValueAt(selectedRow, 2);
                Object selectDisponibilidad = jtableCliente.getValueAt(selectedRow, 1);

                // Imprimir el dato seleccionado
                txtId.setText(selectHabitacion.toString());
                txtDisnponibilidad.setText(selectDisponibilidad.toString());

            }
        });
    }

    private void setModelo() {
        String[] cabeceras = {"#", "Habitacion", "idCliente", "Empleado", "Fecha Inicial", "Fecha final", "Total"};
        TBCliente.setColumnIdentifiers(cabeceras);
        jtableCliente.setModel(TBCliente);
        setDatos();
    }

    private void setDatos() {
        Object[] datos = new Object[TBCliente.getColumnCount()];
        int i = 0;
        for (ReservaObjeto custom : listaReserva) {
            datos[0] = i;
            datos[1] = custom.getIdHabitacion();
            datos[2] = custom.getIdCliente();
            datos[3] = custom.getIdCreador();
            datos[4] = custom.getFechaEntrada();
            datos[5] = custom.getFechaSalida();
            datos[6] = custom.getTotal();
            i++;
            TBCliente.addRow(datos);

        }
    }
    
    public void showContent(JPanel p) {
        // Configurar el tamaño del Content al tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        jPanel1.setSize(screenSize.width, screenSize.height);

        // Establecer el layout del Content
        jPanel1.setLayout(new BorderLayout());

        // Establecer el JPanel en la región central
        jPanel1.removeAll();
        jPanel1.add(p, BorderLayout.CENTER);
        jPanel1.revalidate();
        jPanel1.repaint();
    }
    
    public void sendPanelInfo(){
        EditaCliente cliente = new EditaCliente();
        cliente.setCliente(txtId.getText());
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        jPanel1.setSize(screenSize.width, screenSize.height);

        // Establecer el layout del Content
        jPanel1.setLayout(new BorderLayout());

        // Establecer el JPanel en la región central
        jPanel1.removeAll();
        jPanel1.add(cliente, BorderLayout.CENTER);
        jPanel1.revalidate();
        jPanel1.repaint();
        
    }


    private void InitStyles() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableCliente = new javax.swing.JTable();
        txtDisnponibilidad = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(40, 55, 62));

        jtableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Habitacion", "camas", "almohadas", "precio"
            }
        ));
        jtableCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtableCliente.setFocusable(false);
        jScrollPane2.setViewportView(jtableCliente);

        txtDisnponibilidad.setFocusable(false);

        txtId.setFocusable(false);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Documento");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Habitación");

        jButton1.setText("Inspeccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(491, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(160, 160, 160))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDisnponibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(10, 10, 10)))))
                .addContainerGap(400, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDisnponibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txtDisnponibilidad.getText().equals("") || txtId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor selecciona una reserva.", "Campos incompletos", JOptionPane.INFORMATION_MESSAGE);
        } else {
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtableCliente;
    private javax.swing.JTextField txtDisnponibilidad;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
